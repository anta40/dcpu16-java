
LET THERE BE COMPILER ^.^ (with missing features :-[... but i need it for unit tests)

Input:
	:loop
	ADD A, 0x1
	IFN A, 0x3
		SET PC, loop

Output:
7802 0001 780D 0003 79C1 0000

Execution output:
|_PC_|_SP_|_OV_|_A__|_B__|_C__|_X__|_Y__|_Z__|_I__|_J__|||_OP_|_A__|_B__|
| 00 | 00 | 00 | 00 | 00 | 00 | 00 | 00 | 00 | 00 | 00 ||| 02 | 00 | 1E |
| 02 | 00 | 00 | 01 | 00 | 00 | 00 | 00 | 00 | 00 | 00 ||| 0D | 00 | 1E |
| 04 | 00 | 00 | 01 | 00 | 00 | 00 | 00 | 00 | 00 | 00 ||| 01 | 1C | 1E |
| 00 | 00 | 00 | 01 | 00 | 00 | 00 | 00 | 00 | 00 | 00 ||| 02 | 00 | 1E |
| 02 | 00 | 00 | 02 | 00 | 00 | 00 | 00 | 00 | 00 | 00 ||| 0D | 00 | 1E |
| 04 | 00 | 00 | 02 | 00 | 00 | 00 | 00 | 00 | 00 | 00 ||| 01 | 1C | 1E |
| 00 | 00 | 00 | 02 | 00 | 00 | 00 | 00 | 00 | 00 | 00 ||| 02 | 00 | 1E |
| 02 | 00 | 00 | 03 | 00 | 00 | 00 | 00 | 00 | 00 | 00 ||| 0D | 00 | 1E |
| 05 | 00 | 00 | 03 | 00 | 00 | 00 | 00 | 00 | 00 | 00 ||| 00 | 00 | 00 |

===========================

Compiler infos
	- Simulate lables (This requires 1 extra word in memory per jump :/)
	- Missing variable evaluations for
		- 0x10-0x17: [next word + register]
		-      0x1f: next word (literal)
		- 0x20-0x3f: literal value 0x00-0x1f (literal)
	- Missing opcode evaluation for 0x0
	- ugly code :)

===========================

Just another DCPU implementation.
Language: Java
Inspiration: https://github.com/swetland/dcpu16
           : http://0x10c.com/
           : http://0x10c.com/doc/dcpu-16.txt

>> TODO <<
 - Unit tests
 - A lot of funny stuff ^.^

gz Miah

